{"version":3,"sources":["Header.js","Todo.js","TodoForm.js","TodoList.js","App.js","index.js"],"names":["Header","Todo","todo","toggleHandler","id","handleFilter","task","complete","value","onClick","e","preventDefault","console","log","currentTarget","className","TodoForm","addTask","useState","input","setinput","type","placeholder","onChange","TodoList","todolist","map","style","margin","App","data","settodolist","taskItem","item","Math","floor","random","addedItem","mapped","Number","filterdata","filter","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8JAMeA,MAJf,WACE,OAAO,6C,YCwBMC,MAxBf,YAAsD,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,cAEdC,GAF6C,EAAhBC,aAENH,EAAvBE,IAAIE,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAShB,OACE,oBACEH,GAAIA,EAEJI,MAAOJ,EACPK,QAZgB,SAACC,GACnBA,EAAEC,iBACFC,QAAQC,IAAIT,GACZD,EAAcO,EAAEI,cAAcV,KAU5BW,UAAWR,EAAW,gBAAkB,OAL1C,SAOGD,GALIF,EAAKE,ICgBDU,MA9Bf,YAAgC,IAAZC,EAAW,EAAXA,QAClB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,uBAAMX,QAVa,SAACC,GACN,KAAVS,IACFT,EAAEC,iBACFM,EAAQE,GACRC,EAAS,IACTV,EAAEI,cAAcN,MAAQ,KAK1B,UACE,uBACEA,MAAOW,EACPE,KAAK,OACLC,YAAY,cACZC,SApBe,SAACb,GACpBA,EAAEC,iBACFS,EAASV,EAAEI,cAAcN,UAoBvB,gDCHSgB,MArBf,YAAuE,IAAnDC,EAAkD,EAAlDA,SAAUtB,EAAwC,EAAxCA,cAAeE,EAAyB,EAAzBA,aAC3C,OADoE,EAAXY,QAEvD,qCACE,6BACGQ,EAASC,KAAI,SAACxB,GACb,OACE,cAAC,EAAD,CACEA,KAAMA,EACNC,cAAeA,EACfE,aAAcA,SAKtB,wBAAQsB,MAAO,CAAEC,OAAQ,QAAUnB,QAASJ,EAA5C,uCCTS,SAASwB,IACtB,MAAgCX,mBAASY,GAAzC,mBAAOL,EAAP,KAAiBM,EAAjB,KAGMd,EAAU,SAACe,GACf,IACIC,EAAO,CAAE7B,GADJ8B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,EACvB9B,KAAM0B,EAAUzB,UAAU,GAC3C8B,EAAS,sBAAOZ,GAAP,CAAiBQ,IAE9BF,EAAYM,IA2Bd,OACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEU,SAAUA,EACVtB,cArBgB,SAACC,GACrB,IAAIkC,EAASb,EAASC,KAAI,SAACpB,GACzB,OAAOA,EAAKF,KAAOmC,OAAOnC,GAAnB,2BAEEE,GAFF,IAGDC,UAAWD,EAAKC,WAHf,eAKED,MAEXM,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI,sBAEZkB,EAAYO,IAURjC,aA9Be,WACnB,IAAImC,EAAaf,EAASgB,QAAO,SAACnC,GAChC,OAAQA,EAAKC,YAGfwB,EAAYS,IA0BRvB,QAASA,IAEX,cAAC,EAAD,CAAUA,QAASA,OCjDzB,IAAMyB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACjB,EAAD,MAEFa,I","file":"static/js/main.8669ebc5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return <h1>To-do List</h1>;\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Todo({ todo, toggleHandler, handleFilter }) {\r\n  // console.log(props.data);\r\n  let { id, task, complete } = todo;\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    console.log(id);\r\n    toggleHandler(e.currentTarget.id);\r\n  };\r\n\r\n  //Ask vikas why id needed here\r\n  return (\r\n    <li\r\n      id={id}\r\n      key={id + task}\r\n      value={id}\r\n      onClick={handleClick}\r\n      className={complete ? \"StrikeThrough\" : \"todo\"}\r\n    >\r\n      {task}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from \"react\";\r\nimport data from \"./data\";\r\n\r\nfunction TodoForm({ addTask }) {\r\n  const [input, setinput] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setinput(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if (input !== \"\") {\r\n      e.preventDefault();\r\n      addTask(input);\r\n      setinput(\"\");\r\n      e.currentTarget.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onClick={handleSubmit}>\r\n      <input\r\n        value={input}\r\n        type=\"text\"\r\n        placeholder=\"Add Task...\"\r\n        onChange={handleChange}\r\n      />\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction TodoList({ todolist, toggleHandler, handleFilter, addTask }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {todolist.map((todo) => {\r\n          return (\r\n            <Todo\r\n              todo={todo}\r\n              toggleHandler={toggleHandler}\r\n              handleFilter={handleFilter}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <button style={{ margin: \"20px\" }} onClick={handleFilter}>\r\n        Delete completed Task\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import Headers from \"./Header\";\nimport data from \"./data.json\";\nimport TodoList from \"./TodoList\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [todolist, settodolist] = useState(data);\n\n  //Ask vikas\n  const addTask = (taskItem) => {\n    let id = Math.floor(Math.random() * 1000) + 1;\n    let item = { id: id, task: taskItem, complete: false };\n    let addedItem = [...todolist, item];\n\n    settodolist(addedItem);\n  };\n\n  const handleFilter = () => {\n    let filterdata = todolist.filter((task) => {\n      return !task.complete;\n    });\n\n    settodolist(filterdata);\n  };\n\n  const toggleHandler = (id) => {\n    let mapped = todolist.map((task) => {\n      return task.id === Number(id)\n        ? {\n            ...task,\n            complete: !task.complete\n          }\n        : { ...task };\n    });\n    console.log(mapped);\n    console.log(\"toggle handler hit\");\n\n    settodolist(mapped);\n  };\n\n  //console.log(todolist);\n  return (\n    <div className=\"App\">\n      <Headers />\n      <TodoList\n        todolist={todolist}\n        toggleHandler={toggleHandler}\n        handleFilter={handleFilter}\n        addTask={addTask}\n      />\n      <TodoForm addTask={addTask} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}